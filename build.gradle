plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
}

group = "com.github.mcjty"
archivesBaseName = "lostcities"
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

if (System.getenv('BUILD_NUMBER') != null) {
    version += "-${System.getenv('BUILD_NUMBER')}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

processResources {
    exclude ".cache"
    duplicatesStrategy = 'include'
}

sourceSets.main.resources {
    srcDir 'src/generated/resources' //include generated files
}

loom {
    accessWidenerPath = file("src/main/resources/lostcities.accesswidener")
}

repositories {
    maven {
        url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }

    mavenCentral()
    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }

    maven {
        name = "DevOS One"
        url = ("https://mvn.devos.one/snapshots/")
    }

    maven {
        name = "JitPack"
        url = ("https://jitpack.io/")
    }

    maven {
        name = "Cafeteria Dev"
        url = ("https://maven.cafeteria.dev/releases/")
        content {
            includeGroup("dev.cafeteria")
        }
    }

    maven {
        name = "JamiesWhiteShirt Dev"
        url = ("https://maven.jamieswhiteshirt.com/libs-release")
        content {
            includeGroup("com.jamieswhiteshirt")
        }
    }

    maven { url "https://maven.architectury.dev/" }

    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.19.2:2022.11.27@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.minecraftforge:forgeconfigapiport-fabric:4.2.11"

    implementation 'com.electronwill.night-config:core:3.6.5'
    implementation 'com.electronwill.night-config:toml:3.6.5'

    // @Nullable
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    include(modImplementation("io.github.fabricators_of_create.Porting-Lib:porting-lib:2.1.875+1.19.2"))
    include modImplementation("com.jamieswhiteshirt:reach-entity-attributes:2.3.0")
    include(modImplementation('com.github.KiltMC:ForgeCapabilities:54b0bd031c'))
    include(modImplementation('com.github.KiltMC:ForgeBiomeModifiers:834a616002'))

    include(implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:0.2.0-beta.9")))

    modApi "dev.architectury:architectury-fabric:6.5.85"
    modImplementation("curse.maven:jei-238222:4494409")
    modImplementation("curse.maven:the-one-probe-fabric-581847:4062215")
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest {
        attributes 'FMLAT': 'accesstransformer.cfg',
                "Specification-Title": name,
                "Specification-Vendor": "McJty",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"McJty",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    }
}